

Note: 
eps = >191.9
minpoints = > 1.1
accuracy = 0.96

eps = 192
minpint = 12

Problem
1. 10 unknowon unknown data can't be classity 
Solution
1. can use other classification 

References : 
    Dbscan: 
        Used:
            https://medium.com/analytics-vidhya/dbscan-from-scratch-almost-b02096600c14

        Others: 
            https://scrunts23.medium.com/dbscan-algorithm-from-scratch-in-python-475b82e0571c
            https://github.com/lakithasahan/dbscan-from-scratch/blob/master/DBSCANcompletecode.py


Kmeans: 
    https://towardsdatascience.com/create-your-own-k-means-clustering-algorithm-in-python-d7d4c9077670

Hierarchical clustering: 
https://medium.com/@quangloctrandinh1998vn/hierarchical-clustering-python-from-scratch-fc1c60e935f7


* Programming logic DBSCAN 

1. Read test and train data 
2. Try Preprocessing
    - Drop columns with more than 90% zeros (Resulting in decrease a lot of accuracy)
    -   fill zero with knn (Resulting in decrease a lot of accuracy)
3. Using Classification (分類) to clasify train data 
    - To Save each data probability in class A, B, C (Picture in 3 colors)
    
    # For displaying only
    - Display each data probability in class A, B, C 
    - Dispaly each data max probability in either class A, B or C 

4. 處理 Unknown data 
    - Unknown data 是 data that is below our setting threshould, in this code we use 0.75

    - 把 Unknown data 的label 變成 'Unknown' 

5. DBScan 分群
    - 使用 Bayesian Optimization 找出 最適合 的 eps & min points dbscan parameters 

    - 用 Dbscan分群 把 Unknown data 分群 

    - After using dbscan clustering, it will divide the data into 2 clusters + noise data

6. 處理 noise data 
    - First, We train a classification model using the known data (all 5 classes excpet noise data)
    - Then we predict the noise data, to see what classes it belong to





# Bayesian Optimization
Silhouette score, which measures how similar an object is to its own cluster compared to other clusters.

In the context of using Bayesian optimization to tune the hyperparameters of the DBSCAN clustering algorithm, the value 0.3463 represents the best score of the objective function that you are trying to optimize. The exact meaning of this score depends on how you have defined your objective function for evaluating the quality of the clustering. Here are a few common scenarios:

Silhouette Score: If your objective function is the silhouette score, then 0.3463 represents the highest silhouette score achieved during the optimization process. The silhouette score measures how similar an object is to its own cluster compared to other clusters. Values range from -1 to 1, with higher values indicating better-defined clusters.